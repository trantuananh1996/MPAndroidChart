apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.philjay'

android {
    compileSdkVersion 29
    // resourcePrefix 'mpcht'
    defaultConfig {
        //noinspection MinSdkTooLow
        minSdkVersion 17
        targetSdkVersion 29
        versionCode 3
        versionName '3.1.0'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true // this prevents "not mocked" error
    }
}

dependencies {
    //provided 'io.realm:realm-android:0.87.5' // "optional" dependency to realm-database API
    implementation 'androidx.annotation:annotation:1.1.0'
    testImplementation 'junit:junit:4.13-beta-3'
    testImplementation "org.mockito:mockito-core:3.0.0"
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompiler
    task.from variant.javaCompiler.destinationDir
    artifacts.add('archives', task)
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

//task javadoc(type: Javadoc) {
//    options.charSet = 'UTF-8'
//    failOnError false
//    source = android.sourceSets.main.java.sourceFiles
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}

//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}

//artifacts {
//    archives sourcesJar
//    archives javadocJar
//}
